/*
 * Pure API
 * Description text
 *
 * The version of the OpenAPI document: 0.1-Alpha
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.Id;
import com.elsevier.pure.api.sample.stubs.model.Visibility;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Document
 */
@ApiModel(description = "Document")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-08T10:51:00.709711+01:00[Europe/Copenhagen]")
public class Document {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_FREE_FORM_EXTERNAL_IDS = "freeFormExternalIds";
  @SerializedName(SERIALIZED_NAME_FREE_FORM_EXTERNAL_IDS)
  private List<Id> freeFormExternalIds = null;

  public static final String SERIALIZED_NAME_EXTERNALLY_MANAGED = "externallyManaged";
  @SerializedName(SERIALIZED_NAME_EXTERNALLY_MANAGED)
  private Boolean externallyManaged;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE = "documentType";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE)
  private ClassificationRef documentType;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_DOCUMENT_LICENSE = "documentLicense";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_LICENSE)
  private ClassificationRef documentLicense;

  public static final String SERIALIZED_NAME_VISIBLE_ON_PORTAL_DATE = "visibleOnPortalDate";
  @SerializedName(SERIALIZED_NAME_VISIBLE_ON_PORTAL_DATE)
  private OffsetDateTime visibleOnPortalDate;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Visibility visibility;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;


   /**
   * Pure database ID of the object
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object")

  public Long getPureId() {
    return pureId;
  }




  public Document freeFormExternalIds(List<Id> freeFormExternalIds) {
    
    this.freeFormExternalIds = freeFormExternalIds;
    return this;
  }

  public Document addFreeFormExternalIdsItem(Id freeFormExternalIdsItem) {
    if (this.freeFormExternalIds == null) {
      this.freeFormExternalIds = new ArrayList<Id>();
    }
    this.freeFormExternalIds.add(freeFormExternalIdsItem);
    return this;
  }

   /**
   * IDs from the external sources (part of) the object was imported from
   * @return freeFormExternalIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IDs from the external sources (part of) the object was imported from")

  public List<Id> getFreeFormExternalIds() {
    return freeFormExternalIds;
  }


  public void setFreeFormExternalIds(List<Id> freeFormExternalIds) {
    this.freeFormExternalIds = freeFormExternalIds;
  }


  public Document externallyManaged(Boolean externallyManaged) {
    
    this.externallyManaged = externallyManaged;
    return this;
  }

   /**
   * Signals that the information is maintained by synchronization from an external system
   * @return externallyManaged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signals that the information is maintained by synchronization from an external system")

  public Boolean getExternallyManaged() {
    return externallyManaged;
  }


  public void setExternallyManaged(Boolean externallyManaged) {
    this.externallyManaged = externallyManaged;
  }


  public Document title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Document documentType(ClassificationRef documentType) {
    
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getDocumentType() {
    return documentType;
  }


  public void setDocumentType(ClassificationRef documentType) {
    this.documentType = documentType;
  }


  public Document url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public Document documentLicense(ClassificationRef documentLicense) {
    
    this.documentLicense = documentLicense;
    return this;
  }

   /**
   * Get documentLicense
   * @return documentLicense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getDocumentLicense() {
    return documentLicense;
  }


  public void setDocumentLicense(ClassificationRef documentLicense) {
    this.documentLicense = documentLicense;
  }


   /**
   * Get visibleOnPortalDate
   * @return visibleOnPortalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getVisibleOnPortalDate() {
    return visibleOnPortalDate;
  }




  public Document visibility(Visibility visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Visibility getVisibility() {
    return visibility;
  }


  public void setVisibility(Visibility visibility) {
    this.visibility = visibility;
  }


   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreator() {
    return creator;
  }




   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.pureId, document.pureId) &&
        Objects.equals(this.freeFormExternalIds, document.freeFormExternalIds) &&
        Objects.equals(this.externallyManaged, document.externallyManaged) &&
        Objects.equals(this.title, document.title) &&
        Objects.equals(this.documentType, document.documentType) &&
        Objects.equals(this.url, document.url) &&
        Objects.equals(this.documentLicense, document.documentLicense) &&
        Objects.equals(this.visibleOnPortalDate, document.visibleOnPortalDate) &&
        Objects.equals(this.visibility, document.visibility) &&
        Objects.equals(this.creator, document.creator) &&
        Objects.equals(this.created, document.created);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, freeFormExternalIds, externallyManaged, title, documentType, url, documentLicense, visibleOnPortalDate, visibility, creator, created);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    freeFormExternalIds: ").append(toIndentedString(freeFormExternalIds)).append("\n");
    sb.append("    externallyManaged: ").append(toIndentedString(externallyManaged)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    documentLicense: ").append(toIndentedString(documentLicense)).append("\n");
    sb.append("    visibleOnPortalDate: ").append(toIndentedString(visibleOnPortalDate)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

