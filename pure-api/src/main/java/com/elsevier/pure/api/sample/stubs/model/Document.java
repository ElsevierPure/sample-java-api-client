/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.UploadedFile;
import com.elsevier.pure.api.sample.stubs.model.Visibility;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Document
 */
@ApiModel(description = "Document")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-14T14:15:05.724242+01:00[Europe/Copenhagen]")
public class Document {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ClassificationRef type;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private ClassificationRef license;

  public static final String SERIALIZED_NAME_VISIBLE_ON_PORTAL_DATE = "visibleOnPortalDate";
  @SerializedName(SERIALIZED_NAME_VISIBLE_ON_PORTAL_DATE)
  private OffsetDateTime visibleOnPortalDate;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Visibility visibility;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_FILE_CONTENT = "fileContent";
  @SerializedName(SERIALIZED_NAME_FILE_CONTENT)
  private UploadedFile fileContent;

  public static final String SERIALIZED_NAME_FILE_NAME = "fileName";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_MIME_TYPE = "mimeType";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;


   /**
   * Pure database ID of the object
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object")

  public Long getPureId() {
    return pureId;
  }




  public Document title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Document title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Document title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Document type(ClassificationRef type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public ClassificationRef getType() {
    return type;
  }


  public void setType(ClassificationRef type) {
    this.type = type;
  }


   /**
   * Download url for the binary file
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Download url for the binary file")

  public String getUrl() {
    return url;
  }




  public Document license(ClassificationRef license) {
    
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getLicense() {
    return license;
  }


  public void setLicense(ClassificationRef license) {
    this.license = license;
  }


   /**
   * The date the document will be available on the portal
   * @return visibleOnPortalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the document will be available on the portal")

  public OffsetDateTime getVisibleOnPortalDate() {
    return visibleOnPortalDate;
  }




  public Document visibility(Visibility visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @ApiModelProperty(required = true, value = "")

  public Visibility getVisibility() {
    return visibility;
  }


  public void setVisibility(Visibility visibility) {
    this.visibility = visibility;
  }


   /**
   * The user that created the document
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user that created the document")

  public String getCreator() {
    return creator;
  }




   /**
   * Create date for the document
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Create date for the document")

  public OffsetDateTime getCreated() {
    return created;
  }




  public Document fileContent(UploadedFile fileContent) {
    
    this.fileContent = fileContent;
    return this;
  }

   /**
   * Get fileContent
   * @return fileContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UploadedFile getFileContent() {
    return fileContent;
  }


  public void setFileContent(UploadedFile fileContent) {
    this.fileContent = fileContent;
  }


  public Document fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * The documents file name
   * @return fileName
  **/
  @ApiModelProperty(required = true, value = "The documents file name")

  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public Document mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * The documents mime type
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The documents mime type")

  public String getMimeType() {
    return mimeType;
  }


  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public Document size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * The documents size in bytes
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The documents size in bytes")

  public Long getSize() {
    return size;
  }


  public void setSize(Long size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.pureId, document.pureId) &&
        Objects.equals(this.title, document.title) &&
        Objects.equals(this.type, document.type) &&
        Objects.equals(this.url, document.url) &&
        Objects.equals(this.license, document.license) &&
        Objects.equals(this.visibleOnPortalDate, document.visibleOnPortalDate) &&
        Objects.equals(this.visibility, document.visibility) &&
        Objects.equals(this.creator, document.creator) &&
        Objects.equals(this.created, document.created) &&
        Objects.equals(this.fileContent, document.fileContent) &&
        Objects.equals(this.fileName, document.fileName) &&
        Objects.equals(this.mimeType, document.mimeType) &&
        Objects.equals(this.size, document.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, title, type, url, license, visibleOnPortalDate, visibility, creator, created, fileContent, fileName, mimeType, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    visibleOnPortalDate: ").append(toIndentedString(visibleOnPortalDate)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    fileContent: ").append(toIndentedString(fileContent)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

